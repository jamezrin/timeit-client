# based on https://github.com/jurplel/install-qt-action/blob/master/.github/workflows/test.yml

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        version: ['5.15.1']
    steps:
      - uses: actions/checkout@v2

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt with options
        uses: jurplel/install-qt-action@v2
        with:
          modules: 'qtwebengine'
          version: ${{ matrix.version }}
          tools: 'tools_ifw,4.0,qt.tools.ifw.40'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Configure project on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          dir %Qt5_DIR%/lib/cmake
          choco install jom -y
          choco install openssl -y
          qmake "CONFIG+=release"
          jom
        shell: cmd

      - name: Configure project on non-Windows OS
        if: (!startsWith(matrix.os, 'windows'))
        run: |
          ls $Qt5_DIR/lib/cmake
          qmake CONFIG+=release
          make
        shell: bash
